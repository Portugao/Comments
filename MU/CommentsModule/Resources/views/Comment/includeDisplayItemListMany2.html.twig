{# purpose of this template: inclusion template for display of related comments or hook assignments #}
{#
    You can use the context variable to check for the context of this list:
        - 'display': list of related comments included in a display template
        - 'hookDisplayView': list of comments assigned using an UI hook (display/view template)
        - 'hookDisplayEdit': list of comments assigned using an UI hook (edit template)
        - 'hookDisplayDelete': list of comments assigned using an UI hook (delete template)
#}
{% set hasAdminPermission = hasPermission('MUCommentsModule:Comment:', '::', 'ACCESS_ADMIN') %}
{% set hasEditPermission = hasPermission('MUCommentsModule:Comment:', '::', 'ACCESS_COMMENT') %}
{% if context != 'display' %}
<h3>{{ __('Comments') }}</h3>
<div id="comments-container">
    {{ pageAddAsset('stylesheet', zasset('@MUCommentsModule:css/style.css')) }}
    {{ pageAddAsset('stylesheet', asset('jquery-ui/themes/base/jquery-ui.min.css')) }}
    {{ pageAddAsset('stylesheet', asset('bootstrap-jqueryui/bootstrap-jqueryui.min.css')) }}
    {{ pageAddAsset('javascript', asset('jquery-ui/jquery-ui.min.js')) }}
    {{ pageAddAsset('javascript', asset('bootstrap-jqueryui/bootstrap-jqueryui.min.js')) }}
    {{ pageAddAsset('javascript', zasset('@MUCommentsModule:js/MUCommentsModule.js'), 99) }}
    {% if context == 'hookDisplayView' and hasEditPermission %}
        {% set entityNameTranslated = __('comment') %}
        {{ pageAddAsset('javascript', zasset('@MUCommentsModule:js/MUCommentsModule.HookAssignment.js'), 99) }}
        {{ pageAddAsset('javascript', zasset('@MUCommentsModule:js/MUCommentsModule.AutoCompletion.js'), 99) }}
    {% endif %}
{% endif %}

{% set pos = getModVar('MUCommentsModule', 'positionOfForm') %}
{% set orderComments = getModVar('MUCommentsModule', 'orderComments') %}
{% if context == 'hookDisplayView' and hasEditPermission %}

{% if pos == 'above' %}
{# Form for creating a comment #}
    <div class="mucommentsmodule-comment mucommentsmodule-edit">
     {{ mucommentsmodule_showEditForm(subscriberOwner|e('html_attr'), subscriberAreaId|e('html_attr'), subscriberObjectId|e('html_attr')) }}
     {#{ include(
            '@MUCommentsModule/Comment/includeFrontendForm.html.twig',
            {group: 'comment'}
        ) }#}
    </div>
{% endif %}
{% else %}
<div class="alert alert-info">{{ __('No permissions for you to create comments.') }}</div>
{% endif %}
{% set levels = getModVar('MUCommentsModule', 'levelsOfComments') %}
{% set privacy = getModVar('MUComentsModule', 'linkToPrivacyPolicy') %}
{% if items|default and items|length > 0 %}
<div class="mucommentsmodule-related-item-list comment">
<ul id="list-container" class="list-group">
{% for item in items %}
{% if item.comment is null %}
    <li id="comment{{ item.id }}" class="comment-container list-group-item">
    <div class="col-md-2">
        <div class="comment-user">
        {% set profileLink = item.createdBy.getUid()|profileLinkByUserId() %}
        {{ profileLink|raw }}<br />
        <span class="comment-avatar">{{ userAvatar(item.createdBy.getUid(), {rating: 'g'}) }}</span>
        {{ item.yourMailAdress }}
        </div>
    </div>
    <div class="col-md-10">
    <div class="comment-content">
        <div class="comment-header">{% if item.subject != '' %}{{ item.subject }} - {% endif %}{{ item.createdDate|localizeddate('medium', 'short')|raw }} {% if uid > 1 and uid == item.createdBy.getUid() %}<a class="edit-comment" data-id="{{ item.id }}" data-parentid="0" data-subject="{{ item.subject }}" data-text="{{ item.text }}" title="{{ __('edit') }}" href="{{path('mucommentsmodule_comment_edit', {'id': item.id}) }}"><i class="fa fa-ellipsis-h" aria-hidden="true"></i></a>{% endif %}</div>
        <div id="commenttext{{ item.id }}" class="comment-text">{{ item.text }} 
        {% if levels == 'two' or levels == 'three' or levels == 'four' and context == 'hookDisplayView' and hasEditPermission %}
            <span class="answer-container hidden"><a data-id="{{ item.id }}" data-mainId="{{ item.mainId }}" data-sendMail="{{ item.sendMail }}" data-privacy="{{ item.privacyPolicy }}" class="comment-answer btn btn-default btn-xs" href="#"><i class="fa fa-reply" aria-hidden="true"></i></a><span class="answer-form"></span></span>
        {% endif %}
        {% if item.comments %}
            {% for answer in item.comments %}
                <div class="comments-answers">
                <span class="answer-avatar">
                {{ userAvatar(answer.createdBy.getUid(), {rating: 'g'}) }}</span> 
                {% set profileLink = answer.createdBy.getUid()|profileLinkByUserId() %} 
                {{ profileLink|raw }} 
                {{ answer.text }}
                {% if levels == 'three' or levels == 'four' and context == 'hookDisplayView' and hasEditPermission %}
                    <span class="answer-container hidden"><a data-id="{{ answer.id }}" data-mainId="{{ answer.mainId }}" class="comment-answer btn btn-default btn-xs" href="#"><i class="fa fa-reply" aria-hidden="true"></i></a><span class="answer-form"></span></span>
                {% endif %}<span class="answer-date">{{ answer.createdDate|localizeddate('medium', 'short')|raw }}</span>
                {% if answer.comments %}
                    {% for answer in answer.comments %}
                    <div class="comments-answers second-level">
                    <span class="answer-avatar">
                    {{ userAvatar(answer.createdBy.getUid(), {rating: 'g'}) }}</span> 
                    {% set profileLink = answer.createdBy.getUid()|profileLinkByUserId() %} 
                    {{ profileLink|raw }} 
                    {{ answer.text }} 
                    {% if levels == 'four' and context == 'hookDisplayView' and hasEditPermission %}
                        <span class="answer-container hidden"><a data-id="{{ answer.id }}" data-mainId="{{ answer.mainId }}" title="{{ answer.id }}" class="comment-answer btn btn-default btn-xs" href="#"><i class="fa fa-reply" aria-hidden="true"></i></a><span class="answer-form"></span></span>
                    {% endif %}<span class="answer-date">{{ answer.createdDate|localizeddate('medium', 'short')|raw }}</span>
                        {% if answer.comments %}
                        {% for answer in answer.comments %}
                        <div class="comments-answers second-level">
                        <span class="answer-avatar">
                        {{ userAvatar(answer.createdBy.getUid(), {rating: 'g'}) }}</span> 
                        {% set profileLink = answer.createdBy.getUid()|profileLinkByUserId() %} 
                        {{ profileLink|raw }} 
                        {{ answer.text }}<span class="answer-date">{{ answer.createdDate|localizeddate('medium', 'short')|raw }}</span>
                        </div>
                        {% endfor %}
                        {% endif %}
                    </div>
                    {% endfor %}
                {% endif %}
                </div>
            {% endfor %}
        {% endif %}
        
    </div>
    </div>  
    </div>
    <div class="col-md-12">
    </div>
    </li>
    {% endif %}
{% endfor %}</ul><br style="clear: both;" /><br />
{% set level = getModVar('MUCommentsModule', 'levelOfComments') %}
{% if context == 'hookDisplayView' and hasEditPermission and level != 'one' %}
    <noscript>
        <div class="alert alert-info">{{ __('For answering to comments Javascript enabled is needed. Without you only can create new comments!') }}</div>
    </noscript>
</div>
{% endif %}
{% endif %}
{% if context == 'hookDisplayView' and hasEditPermission %}
{% if pos == 'below' %}
{# Form for creating a comment #}
    <h2>Create new comment</h2>
    <div class="mucommentsmodule-comment mucommentsmodule-edit">
     {{ mucommentsmodule_showEditForm(subscriberOwner|e('html_attr'), subscriberAreaId|e('html_attr'), subscriberObjectId|e('html_attr')) }}
        {#{ include(
            '@MUCommentsModule/Comment/includeFrontendForm.html.twig',
            {group: 'comment'}
        ) }#}
    </div>
{% endif %}
</div>
{% endif %}
{% if context == 'hookDisplayView' and hasEditPermission %}

    {% set commentInitScript %}
        <script>
        /* <![CDATA[ */
            ( function($) {
                $(document).ready(function() {
        $('.answer-container').removeClass('hidden');
        
        $('#commentEditForm #mucommentsmodule_comment_text').focus(function(e) {
            e.preventDefault();
            $('.this-answer-form').remove();
            $('.this-comment-edit-form').remove();
        });       
        
        $('.comment-answer').click(function(e) {
            e.preventDefault();
            $('.this-answer-form').remove();
            $('.this-comment-edit-form').remove();
            var formCommentId = 'form' + $(this).data('id');
            var commentId = $(this).data('id');
            var mainId = $(this).data('mainId');
            var privacy = $(this).data('privacy');
            $(this).parent().children('.answer-form').append('<form id="' + formCommentId + '" class="this-answer-form"><textarea id="answer-form-text" name="answer-form-text" class="form-control" rows=1 placeholder="{{ __('Enter your comment') }}"></textarea><input type="checkbox" id="answer-form-message" /> {{ __('Get message?') }}<input type="checkbox" id="answer-form-privacy" /> {{ __('Accept privacy policy?') }}<input type="hidden" id="parentcomment" name="parentcomment" value="' + commentId + '" /><input type="hidden" id="maincomment" name="maincomment" value="' + mainId + '" /></form>');
        });
        
        $('.edit-comment').click(function(e) {
            e.preventDefault();
            $('.this-answer-form').remove();
            $('.this-comment-edit-form').remove();
            var formCommentId = 'form' + $(this).data('id');
            var commentId = $(this).data('id');
            var parentid = $(this).data('parentid');
            var subject = $(this).data('subject');
            var text = $(this).data('text');
            var message = $(this).data('sendMail');
            var privacy = '{{ privacy }}';
            if (privacy != '') {
                $(this).parents('.comment-content').find('.comment-text').prepend('<form id="' + formCommentId + '" class="this-comment-edit-form"><input id="this-comment-edit-subject" class="form-control" type="text" value="' + subject + '"><textarea id="this-comment-edit-text" name="this-comment-form-text" class="form-control" rows="1" placeholder="' + text + '"></textarea> <input type="checkbox" id="answer-form-privacy" name="answer-form-privacy" /> {{ __('Accept privacy policy?') }}<input type="hidden" id="parentcomment" name="parentcomment" value="' + commentId + '" /><input type="hidden" id="thisComment" name="thisComment" value="' + commentId + '" /></form>');
            } else {
                $(this).parents('.comment-content').find('.comment-text').prepend('<form id="' + formCommentId + '" class="this-comment-edit-form"><input id="this-comment-edit-subject" class="form-control" type="text" value="' + subject + '"><textarea id="this-comment-edit-text" name="this-comment-form-text" class="form-control" rows="1" placeholder="' + text + '"></textarea> <input type="hidden" id="parentcomment" name="parentcomment" value="' + commentId + '" /><input type="hidden" id="thisComment" name="thisComment" value="' + commentId + '" /></form>');
                }
            $('#this-comment-edit-text').val(text);
        });
        
        $('.answer-form').on('keydown','.this-answer-form', function(e) {
           if (e.which == '13') {
           if(e.shiftKey == 0) {
                e.preventDefault();
                var text = $(this).find('#answer-form-text').val();
                var message = $(this).find('#answer-form-message').val();
                var commentId = $(this).find('#parentcomment').val();
                var mainId = $(this).find('#maincomment').val();
                if (mainId == 0) {
                    mainId = commentId;
                }
                if($('#answer-form-text').val() != '') {
                    $('.this-answer-form').parent().append('<img class="commentimg" src="/modules/MU/CommentsModule/Resources/public/images/ajax-loader.gif"" />');
                    $('.this-answer-form').remove();
                    $.ajax({
                        method: 'POST',
                        url: '{{ path('mucommentsmodule_ajax_' ~ routeArea ~ 'answer') }}',

                        data: {
                            owner: '{{ subscriberOwner|e('html_attr') }}',
                            areaId: '{{ subscriberAreaId|e('html_attr') }}',
                            objectId: '{{ subscriberObjectId|e('html_attr') }}',
                            url: '{{ subscriberUrl }}',
                            text: text,
                            message: message,
                            parentcomment: commentId,
                            maincomment: mainId,
                            assignedEntity: 'comment'
                        },
                        success: function(data) {
                            if (data.id > 0) {
                                if (data.moderate == 'no') {
                                    var out = '<div class="comments-answers"><span class="answer-avatar">' + data.avatar + '</span>' + data.link + ' ' + data.text + '</div>';
                                } else {
                                    var out = '<div class="comments-feedback alert alert-info">Thank you for your comment. We will check as soon as possible.</div>';
                                }                            
                            } else {
                                if (data.id == -1) {
                                var out = '<div class="comments-feedback alert alert-info">You have to accept the privacy policy!</div>';
                                }
                            }
                            $('#commenttext' + commentId).append(out);
                            $('.commentimg').hide('slow');
                            if(data.moderate == 'yes') {
                                $('.comments-feedback').delay(10000).hide('slow');
                            } 
                            $('.this-answer-form input, .this-answer-form input textarea').val('');
                            $('.this-answer-form > input:checkbox').prop('checked',false);
                        }
                    });
                }
              }
           }
        });
        
        $('#commentEditForm').on('keydown', function(e) {
           if (e.which == '13') {
           if(e.shiftKey == 0) {
                e.preventDefault();
                var subject = $(this).find('#mucommentsmodule_comment_subject').val();
                var name = $(this).find('#mucommentsmodule_comment_name').val();
                var yourMail = $(this).find('#mucommentsmodule_comment_yourMailAddress').val();
                var text = $(this).find('#mucommentsmodule_comment_text').val();
                var content = $(this).find('#mucommentsmodule_comment_content').val();
                var mail = $(this).find('#mucommentsmodule_comment_sendMails').is(':checked') ? 1 : 0;
                var privacy = $(this).find('#mucommentsmodule_comment_privacyPolicy').is(':checked') ? 1 : 0;
                var privacySetting = $(this).find('#privacySetting').val();
                if(text == '') {
                    var out = '<div class="comments-text-feedback alert alert-info">Please enter your text!</div>';
                    $('#mucommentsmodule_comment_text').append(out);
                }
                if($('#mucommentsmodule_comment_text').val() != '' && ((privacy == 0 && privacySetting == '') || (privacy == 1 && privacySetting != ''))) {
                    $('#commentEditForm').parent().append('<img class="commentimg" src="/modules/MU/CommentsModule/Resources/public/images/ajax-loader.gif" />');
                    $.ajax({
                        method: 'POST',
                        url: '{{ path('mucommentsmodule_ajax_' ~ routeArea ~ 'answer') }}',

                        data: {
                            owner: '{{ subscriberOwner|e('html_attr') }}',
                            areaId: '{{ subscriberAreaId|e('html_attr') }}',
                            objectId: '{{ subscriberObjectId|e('html_attr') }}',
                            url: '{{ subscriberUrl }}',
                            subject: subject,
                            name: name,
                            yourMail: yourMail,
                            text: text,
                            content: content,
                            mail: mail,
                            privacy: privacy,
                            parentcomment: 0,
                            maincomment: 0,
                            assignedEntity: 'comment'
                        },
                        success: function(data) {
                        if (data.id > 0) {
                        if (data.moderate == 'no') {
	                        var out = '<li id="comment' + data.id + '" class="comment-container list-group-item">';
	                            out = out + '<div class="col-md-2"><div class="comment-user">';
	                            out = out + data.link + '<br />';
	                            out = out + '<span class="comment-avatar">' + data.avatar + '</span></div></div>';
	                            out = out + '<div class="col-md-10"><div class="comment-content"><div class="comment-header">';
	                            if(data.subject != '') {
	                                out = out + data.subject + ' - ';
	                            }   
	                            out = out + data.created;
	                            out = out + '</div>';
	                            out = out + '<div id="commenttext' + data.id + '" class="comment-text">' + data.text;
	                            out = out + '<span class="answer-container hidden"><a title="3" class="comment-answer btn btn-default btn-xs" href="#"><i class="fa fa-reply" aria-hidden="true"></i></a><span class="answer-form"></span></span>';
	                            out = out + '</div></li><div class="col-md-12"></div></div>';
                            } else {
                                var out = '<div class="comments-feedback alert alert-info">Thank you for your comment. We will check as soon as possible.</div>';
                            }

                            {% if orderComments == 'desc' %}
                                $('#list-container').prepend(out);
                            {% else %}
                                $('#list-container').append(out);
                            {% endif %}

                        }
                        $('.commentimg').hide('slow');
                        if(data.moderate == 'yes') {
                            $('.z-displayhook h3').get(0).scrollIntoView();
                            $('.comments-feedback').delay(5000).hide('slow');
                        }
                        $('#commentEditForm textarea').val('');
                        $('#commentEditForm #mucommentsmodule_comment_privacyPolicy').prop('checked', false);
                        $('#mucommentsmodule_comment_privacyPolicy').val(1);
                        }
                    });
                }  else {
                var out = '<div class="comments-feedback alert alert-info">You have to accept the privacy policy for commenting!</div>';
                $('.privacy-notice').append(out);

                $('.comments-feedback').delay(5000).hide('slow');
              }
              }
           }
        });
        
           $('body').on('keydown','.this-comment-edit-form', function(e) {
           if (e.which == '13') {
           if(e.shiftKey == 0) {
                e.preventDefault();
                var subject = $(this).find('#this-comment-edit-subject').val();
                var text = $(this).find('#this-comment-edit-text').val();
                var commentId = $(this).find('#parentcomment').val();
                var thisId = $(this).find('#thisComment').val();
                if($('#this-comment-edit-text').val() != '') {
                    $('#commentEditForm').parent().append('<img class="commentimg" src="/modules/MU/CommentsModule/Resources/public/images/ajax-loader.gif" />');
                    $('.this-comment-edit-form').remove();
                    $.ajax({
                        method: 'POST',
                        url: '{{ path('mucommentsmodule_ajax_' ~ routeArea ~ 'edit') }}',

                        data: {
                            owner: '{{ subscriberOwner|e('html_attr') }}',
                            areaId: '{{ subscriberAreaId|e('html_attr') }}',
                            objectId: '{{ subscriberObjectId|e('html_attr') }}',
                            url: '{{ subscriberUrl }}',
                            subject: subject,
                            text: text,
                            thisComment: thisId,
                            parentcomment: 0,
                            assignedEntity: 'comment'
                        },
                        success: function(data) {
                        var out = '<div id="comment' + data.id;
                            out = out + '<div class="col-md-2">';
                            out = out + '<div class="comment-user">';
                            out = out + data.link + '<br />';
                            out = out + '<span class="comment-avatar">' + data.avatar + '</span>';
                            out = out + '</div>',
                            out = out + '</div>';
                            out = out + '<div class="col-md-10">',
                            out = out + '<div class="comment-content">';
                            out = out + '<div class="comment-header">';
                            if(data.subject != '') {
                                out = out + data.subject + ' - ';
                            }   
                            out = out + data.created;
                            out = out + '<a title="edit" href=""><i class="fa fa-ellipsis-h" aria-hidden="true"></i></a>';
                            out = out + '</div>';
                            out = out + '<div id="commenttext' + data.id + '" class="comment-text">' + data.text;
                            out = out + '<span class="answer-container hidden"><a title="3" class="comment-answer btn btn-default btn-xs" href="#"><i class="fa fa-reply" aria-hidden="true"></i></a><span class="answer-form"></span></span>';
                            out = out + '</div>';
                            out = out + '</div>';
                            out = out + '<div class="col-md-12"></div></div>';
                            $('.this-comment-edit-form').parent('.comment-container').html(out);
                            $('.commentimg').hide('slow');
                        }
                    });
                }
              }
           }
        });
        
        $('.comment-submit').click(function(e) {
            e.preventDefault();
            var container = $(this).parent('.comment-container');
            if($('#answer-form-text').val() != '') {
                alert('gesendet');
                $.get('{{ path('mucommentsmodule_ajax_' ~ routeArea ~ 'answer') }}', function(result) {
                    if(result) {
                        $('#commenttext1').append('Hallo');
                    }
                });
            }
        });
        });
        })(jQuery);
       /* ]]> */
        </script>
        {% endset %}
    {{ pageAddAsset('footer', commentInitScript) }}
{% endif %}
